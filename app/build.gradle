plugins {
	id 'application'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
	id 'jacoco'
	id'io.freefair.lombok' version '8.12.2'
	id 'io.sentry.jvm.gradle' version '5.3.0'
}

ext {
	sentryVersion = "8.3.0"
}


group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.mapstruct:mapstruct:1.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta'

	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	implementation 'net.datafaker:datafaker:2.3.0'
	implementation 'org.instancio:instancio-junit:5.0.2'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:3.2.7'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('jacocoTestReport') {
	reports {
		xml.required.set(true)
	}
}

application {
	mainClassName = "hexlet.code.AppApplication"
}

sentry {
	includeSourceContext = true

	org = "konstantinov-u5"
	projectName = "java-spring-boot"
	authToken = System.getenv("SENTRY_AUTH_TOKEN")

	if (System.getenv("SENTRY_AUTH_TOKEN") == null) {
		tasks.named("sentryBundleSourcesJava").configure { enabled = false }
	}
}



dependencyManagement {
	imports {
		mavenBom "io.sentry:sentry-bom:$sentryVersion"
	}
}



